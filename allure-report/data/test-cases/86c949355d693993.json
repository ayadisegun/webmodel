{"uid":"86c949355d693993","name":"test_login_admin[17000-Cswtest1.-yadi-Yadi1.com-yadi-yadinew1-yadi1new-Csw Test-ELECTRICITY-IkejaPrepaid - E01E-SHAGO]","fullName":"test_file.test_csw2025adm.TestLogin1#test_login_admin","historyId":"458f088609ce31f1b5eb03aa6e01effa","time":{"start":1751296843196,"stop":1751296843267,"duration":71},"status":"broken","statusMessage":"PermissionError: [Errno 13] Permission denied: 'C://Users//Segun//PycharmProjects//model//test_file//file.xlsx'","statusTrace":"self = <test_file.test_csw2025adm.TestLogin1 object at 0x0000025D85873D90>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3147e3b54d199da4b22e39c0d765c0cb\")>\nmerch_user = 17000, merch_pass = 'Cswtest1.', admn_user = 'yadi'\nadmn_pass = 'Yadi1.com', current_password = 'yadi', new_password = 'yadinew1'\nwrong_confirm = 'yadi1new', merch_name = 'Csw Test', category = 'ELECTRICITY'\nservice = 'IkejaPrepaid - E01E', provider = 'SHAGO'\n\n    @pytest.mark.parametrize(\"merch_user, merch_pass, admn_user, admn_pass, current_password, new_password, \"\n                             \"wrong_confirm, merch_name, category, service, provider\", read_data())\n    def test_login_admin(self, setup, merch_user, merch_pass, admn_user, admn_pass, current_password, new_password,\n                         wrong_confirm, merch_name, category, service, provider):\n        driver = setup\n        self.driver = driver\n        utils = BaseUtils(self.driver)\n        title = self.driver.title\n        exp_title = \"Creditswitch Merchant Portal | Login\"\n        if title == exp_title:\n            pass\n        else:\n            utils.get_screenshot(\"wrong_site\")\n            print(\"invalid title\")\n        assert \"Creditswitch\" in title\n>       set_data((readconfig(\"data\", \"file\")), (readconfig(\"data\", \"sheet_name\")), 1, 12, \"Url_title\")\n\ntest_file\\test_csw2025adm.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_file\\conftest.py:209: in set_data\n    workbook.save(file_path)\nC:\\Program Files\\Python311\\Lib\\site-packages\\openpyxl\\workbook\\workbook.py:386: in save\n    save_workbook(self, filename)\nC:\\Program Files\\Python311\\Lib\\site-packages\\openpyxl\\writer\\excel.py:291: in save_workbook\n    archive = ZipFile(filename, 'w', ZIP_DEFLATED, allowZip64=True)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <zipfile.ZipFile [closed]>\nfile = 'C://Users//Segun//PycharmProjects//model//test_file//file.xlsx'\nmode = 'w', compression = 8, allowZip64 = True, compresslevel = None\n\n    def __init__(self, file, mode=\"r\", compression=ZIP_STORED, allowZip64=True,\n                 compresslevel=None, *, strict_timestamps=True, metadata_encoding=None):\n        \"\"\"Open the ZIP file with mode read 'r', write 'w', exclusive create 'x',\n        or append 'a'.\"\"\"\n        if mode not in ('r', 'w', 'x', 'a'):\n            raise ValueError(\"ZipFile requires mode 'r', 'w', 'x', or 'a'\")\n    \n        _check_compression(compression)\n    \n        self._allowZip64 = allowZip64\n        self._didModify = False\n        self.debug = 0  # Level of printing: 0 through 3\n        self.NameToInfo = {}    # Find file info given name\n        self.filelist = []      # List of ZipInfo instances for archive\n        self.compression = compression  # Method of compression\n        self.compresslevel = compresslevel\n        self.mode = mode\n        self.pwd = None\n        self._comment = b''\n        self._strict_timestamps = strict_timestamps\n        self.metadata_encoding = metadata_encoding\n    \n        # Check that we don't try to write with nonconforming codecs\n        if self.metadata_encoding and mode != 'r':\n            raise ValueError(\n                \"metadata_encoding is only supported for reading files\")\n    \n        # Check if we were passed a file-like object\n        if isinstance(file, os.PathLike):\n            file = os.fspath(file)\n        if isinstance(file, str):\n            # No, it's a filename\n            self._filePassed = 0\n            self.filename = file\n            modeDict = {'r' : 'rb', 'w': 'w+b', 'x': 'x+b', 'a' : 'r+b',\n                        'r+b': 'w+b', 'w+b': 'wb', 'x+b': 'xb'}\n            filemode = modeDict[mode]\n            while True:\n                try:\n>                   self.fp = io.open(file, filemode)\nE                   PermissionError: [Errno 13] Permission denied: 'C://Users//Segun//PycharmProjects//model//test_file//file.xlsx'\n\nC:\\Program Files\\Python311\\Lib\\zipfile.py:1281: PermissionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1751296835783,"stop":1751296843189,"duration":7406},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"PermissionError: [Errno 13] Permission denied: 'C://Users//Segun//PycharmProjects//model//test_file//file.xlsx'","statusTrace":"self = <test_file.test_csw2025adm.TestLogin1 object at 0x0000025D85873D90>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3147e3b54d199da4b22e39c0d765c0cb\")>\nmerch_user = 17000, merch_pass = 'Cswtest1.', admn_user = 'yadi'\nadmn_pass = 'Yadi1.com', current_password = 'yadi', new_password = 'yadinew1'\nwrong_confirm = 'yadi1new', merch_name = 'Csw Test', category = 'ELECTRICITY'\nservice = 'IkejaPrepaid - E01E', provider = 'SHAGO'\n\n    @pytest.mark.parametrize(\"merch_user, merch_pass, admn_user, admn_pass, current_password, new_password, \"\n                             \"wrong_confirm, merch_name, category, service, provider\", read_data())\n    def test_login_admin(self, setup, merch_user, merch_pass, admn_user, admn_pass, current_password, new_password,\n                         wrong_confirm, merch_name, category, service, provider):\n        driver = setup\n        self.driver = driver\n        utils = BaseUtils(self.driver)\n        title = self.driver.title\n        exp_title = \"Creditswitch Merchant Portal | Login\"\n        if title == exp_title:\n            pass\n        else:\n            utils.get_screenshot(\"wrong_site\")\n            print(\"invalid title\")\n        assert \"Creditswitch\" in title\n>       set_data((readconfig(\"data\", \"file\")), (readconfig(\"data\", \"sheet_name\")), 1, 12, \"Url_title\")\n\ntest_file\\test_csw2025adm.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_file\\conftest.py:209: in set_data\n    workbook.save(file_path)\nC:\\Program Files\\Python311\\Lib\\site-packages\\openpyxl\\workbook\\workbook.py:386: in save\n    save_workbook(self, filename)\nC:\\Program Files\\Python311\\Lib\\site-packages\\openpyxl\\writer\\excel.py:291: in save_workbook\n    archive = ZipFile(filename, 'w', ZIP_DEFLATED, allowZip64=True)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <zipfile.ZipFile [closed]>\nfile = 'C://Users//Segun//PycharmProjects//model//test_file//file.xlsx'\nmode = 'w', compression = 8, allowZip64 = True, compresslevel = None\n\n    def __init__(self, file, mode=\"r\", compression=ZIP_STORED, allowZip64=True,\n                 compresslevel=None, *, strict_timestamps=True, metadata_encoding=None):\n        \"\"\"Open the ZIP file with mode read 'r', write 'w', exclusive create 'x',\n        or append 'a'.\"\"\"\n        if mode not in ('r', 'w', 'x', 'a'):\n            raise ValueError(\"ZipFile requires mode 'r', 'w', 'x', or 'a'\")\n    \n        _check_compression(compression)\n    \n        self._allowZip64 = allowZip64\n        self._didModify = False\n        self.debug = 0  # Level of printing: 0 through 3\n        self.NameToInfo = {}    # Find file info given name\n        self.filelist = []      # List of ZipInfo instances for archive\n        self.compression = compression  # Method of compression\n        self.compresslevel = compresslevel\n        self.mode = mode\n        self.pwd = None\n        self._comment = b''\n        self._strict_timestamps = strict_timestamps\n        self.metadata_encoding = metadata_encoding\n    \n        # Check that we don't try to write with nonconforming codecs\n        if self.metadata_encoding and mode != 'r':\n            raise ValueError(\n                \"metadata_encoding is only supported for reading files\")\n    \n        # Check if we were passed a file-like object\n        if isinstance(file, os.PathLike):\n            file = os.fspath(file)\n        if isinstance(file, str):\n            # No, it's a filename\n            self._filePassed = 0\n            self.filename = file\n            modeDict = {'r' : 'rb', 'w': 'w+b', 'x': 'x+b', 'a' : 'r+b',\n                        'r+b': 'w+b', 'w+b': 'wb', 'x+b': 'xb'}\n            filemode = modeDict[mode]\n            while True:\n                try:\n>                   self.fp = io.open(file, filemode)\nE                   PermissionError: [Errno 13] Permission denied: 'C://Users//Segun//PycharmProjects//model//test_file//file.xlsx'\n\nC:\\Program Files\\Python311\\Lib\\zipfile.py:1281: PermissionError","steps":[],"attachments":[{"uid":"230b4dddd869d7a1","name":"stdout","source":"230b4dddd869d7a1.txt","type":"text/plain","size":58}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":1,"hasContent":true,"stepsCount":0,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1751296843961,"stop":1751296847092,"duration":3131},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('setup')"},{"name":"parentSuite","value":"test_file"},{"name":"suite","value":"test_csw2025adm"},{"name":"subSuite","value":"TestLogin1"},{"name":"host","value":"Ayadi"},{"name":"thread","value":"32136-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_file.test_csw2025adm"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"admn_pass","value":"'Yadi1.com'"},{"name":"admn_user","value":"'yadi'"},{"name":"category","value":"'ELECTRICITY'"},{"name":"current_password","value":"'yadi'"},{"name":"merch_name","value":"'Csw Test'"},{"name":"merch_pass","value":"'Cswtest1.'"},{"name":"merch_user","value":"17000"},{"name":"new_password","value":"'yadinew1'"},{"name":"provider","value":"'SHAGO'"},{"name":"service","value":"'IkejaPrepaid - E01E'"},{"name":"wrong_confirm","value":"'yadi1new'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["@pytest.mark.usefixtures('setup')"]},"source":"86c949355d693993.json","parameterValues":["'Yadi1.com'","'yadi'","'ELECTRICITY'","'yadi'","'Csw Test'","'Cswtest1.'","17000","'yadinew1'","'SHAGO'","'IkejaPrepaid - E01E'","'yadi1new'"]}