{"name": "test_login_admin[17000-Cswtest1.-yadi-Yadi1.com-yadi-yadinew1-yadi1new-Csw Test-ELECTRICITY-IkejaPrepaid - E01E-SHAGO]", "status": "broken", "statusDetails": {"message": "PermissionError: [Errno 13] Permission denied: 'C://Users//Segun//PycharmProjects//model//test_file//file.xlsx'", "trace": "self = <test_file.test_csw2025adm.TestLogin1 object at 0x0000025D85873D90>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3147e3b54d199da4b22e39c0d765c0cb\")>\nmerch_user = 17000, merch_pass = 'Cswtest1.', admn_user = 'yadi'\nadmn_pass = 'Yadi1.com', current_password = 'yadi', new_password = 'yadinew1'\nwrong_confirm = 'yadi1new', merch_name = 'Csw Test', category = 'ELECTRICITY'\nservice = 'IkejaPrepaid - E01E', provider = 'SHAGO'\n\n    @pytest.mark.parametrize(\"merch_user, merch_pass, admn_user, admn_pass, current_password, new_password, \"\n                             \"wrong_confirm, merch_name, category, service, provider\", read_data())\n    def test_login_admin(self, setup, merch_user, merch_pass, admn_user, admn_pass, current_password, new_password,\n                         wrong_confirm, merch_name, category, service, provider):\n        driver = setup\n        self.driver = driver\n        utils = BaseUtils(self.driver)\n        title = self.driver.title\n        exp_title = \"Creditswitch Merchant Portal | Login\"\n        if title == exp_title:\n            pass\n        else:\n            utils.get_screenshot(\"wrong_site\")\n            print(\"invalid title\")\n        assert \"Creditswitch\" in title\n>       set_data((readconfig(\"data\", \"file\")), (readconfig(\"data\", \"sheet_name\")), 1, 12, \"Url_title\")\n\ntest_file\\test_csw2025adm.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_file\\conftest.py:209: in set_data\n    workbook.save(file_path)\nC:\\Program Files\\Python311\\Lib\\site-packages\\openpyxl\\workbook\\workbook.py:386: in save\n    save_workbook(self, filename)\nC:\\Program Files\\Python311\\Lib\\site-packages\\openpyxl\\writer\\excel.py:291: in save_workbook\n    archive = ZipFile(filename, 'w', ZIP_DEFLATED, allowZip64=True)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <zipfile.ZipFile [closed]>\nfile = 'C://Users//Segun//PycharmProjects//model//test_file//file.xlsx'\nmode = 'w', compression = 8, allowZip64 = True, compresslevel = None\n\n    def __init__(self, file, mode=\"r\", compression=ZIP_STORED, allowZip64=True,\n                 compresslevel=None, *, strict_timestamps=True, metadata_encoding=None):\n        \"\"\"Open the ZIP file with mode read 'r', write 'w', exclusive create 'x',\n        or append 'a'.\"\"\"\n        if mode not in ('r', 'w', 'x', 'a'):\n            raise ValueError(\"ZipFile requires mode 'r', 'w', 'x', or 'a'\")\n    \n        _check_compression(compression)\n    \n        self._allowZip64 = allowZip64\n        self._didModify = False\n        self.debug = 0  # Level of printing: 0 through 3\n        self.NameToInfo = {}    # Find file info given name\n        self.filelist = []      # List of ZipInfo instances for archive\n        self.compression = compression  # Method of compression\n        self.compresslevel = compresslevel\n        self.mode = mode\n        self.pwd = None\n        self._comment = b''\n        self._strict_timestamps = strict_timestamps\n        self.metadata_encoding = metadata_encoding\n    \n        # Check that we don't try to write with nonconforming codecs\n        if self.metadata_encoding and mode != 'r':\n            raise ValueError(\n                \"metadata_encoding is only supported for reading files\")\n    \n        # Check if we were passed a file-like object\n        if isinstance(file, os.PathLike):\n            file = os.fspath(file)\n        if isinstance(file, str):\n            # No, it's a filename\n            self._filePassed = 0\n            self.filename = file\n            modeDict = {'r' : 'rb', 'w': 'w+b', 'x': 'x+b', 'a' : 'r+b',\n                        'r+b': 'w+b', 'w+b': 'wb', 'x+b': 'xb'}\n            filemode = modeDict[mode]\n            while True:\n                try:\n>                   self.fp = io.open(file, filemode)\nE                   PermissionError: [Errno 13] Permission denied: 'C://Users//Segun//PycharmProjects//model//test_file//file.xlsx'\n\nC:\\Program Files\\Python311\\Lib\\zipfile.py:1281: PermissionError"}, "attachments": [{"name": "stdout", "source": "527c6420-edd5-40f4-8f7f-81eb06bf6608-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "merch_user", "value": "17000"}, {"name": "merch_pass", "value": "'Cswtest1.'"}, {"name": "admn_user", "value": "'yadi'"}, {"name": "admn_pass", "value": "'Yadi1.com'"}, {"name": "current_password", "value": "'yadi'"}, {"name": "new_password", "value": "'yadinew1'"}, {"name": "wrong_confirm", "value": "'yadi1new'"}, {"name": "merch_name", "value": "'Csw Test'"}, {"name": "category", "value": "'ELECTRICITY'"}, {"name": "service", "value": "'IkejaPrepaid - E01E'"}, {"name": "provider", "value": "'SHAGO'"}], "start": 1751296843196, "stop": 1751296843267, "uuid": "c03c2d0f-d9d1-45ec-b830-e7163dd0378d", "historyId": "458f088609ce31f1b5eb03aa6e01effa", "testCaseId": "59c5ce346cc3349d452f034a63fd8939", "fullName": "test_file.test_csw2025adm.TestLogin1#test_login_admin", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "test_file"}, {"name": "suite", "value": "test_csw2025adm"}, {"name": "subSuite", "value": "TestLogin1"}, {"name": "host", "value": "Ayadi"}, {"name": "thread", "value": "32136-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_file.test_csw2025adm"}]}